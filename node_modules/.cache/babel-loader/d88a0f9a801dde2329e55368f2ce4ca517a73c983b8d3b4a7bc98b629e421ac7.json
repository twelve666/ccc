{"ast":null,"code":"var _jsxFileName = \"/Users/summer/Desktop/2/filbet-client-web-ui/src/components/tabs/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_ACTIVE_LINE_MODE = 'auto';\nconst tabBoxStyle = {\n  display: 'flex',\n  cursor: 'pointer'\n};\nconst tabStyle = {\n  color: 'gray',\n  width: '33%'\n};\nconst activeTabStyle = React.CSSProperties = {\n  color: 'gray',\n  width: '33%'\n};\nconst tabStyleter = {\n  color: 'gray',\n  width: '33%'\n};\nconst Tab = ({\n  tabs,\n  onTabChange,\n  activeTabStyle,\n  activeLineMode = DEFAULT_ACTIVE_LINE_MODE\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const [scrollable, setScrollable] = useState(false);\n  const [activeKey, setActiveTab] = useState(0);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      const containerWidth = container.offsetWidth;\n      const totalTabsWidth = tabs.reduce((acc, tab) => acc + tab.length * 12, 0); // Assuming each character is 12px wide\n      setScrollable(totalTabsWidth > containerWidth);\n    }\n  }, [tabs]);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container && scrollable) {\n      const activeTabElement = container.children[activeKey];\n      const containerScrollLeft = container.scrollLeft;\n      const activeTabOffsetLeft = activeTabElement.offsetLeft;\n      const activeTabWidth = activeTabElement.offsetWidth;\n\n      // Check if active tab is fully visible\n      if (activeTabOffsetLeft < containerScrollLeft || activeTabOffsetLeft + activeTabWidth > containerScrollLeft + container.offsetWidth) {\n        container.scrollLeft = activeTabOffsetLeft - (container.offsetWidth - activeTabWidth) / 2;\n      }\n    }\n  }, [activeKey, scrollable]);\n  const handleTabChange = index => {\n    onTabChange(index);\n    setActiveTab(index);\n    // Handle tab change logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      overflowX: 'hidden',\n      whiteSpace: 'nowrap',\n      position: 'relative'\n    },\n    children: [scrollable && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 1,\n        width: 50,\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tabBoxStyle,\n      children: tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTabChange(index),\n        style: activeKey === index ? {\n          ...tabStyle,\n          ...activeTabStyle\n        } : tabStyle,\n        children: tab\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Tab, \"JwynpgNA/GhmdbF+TBwuFlAjcZE=\");\n_c = Tab;\nexport default Tab;\nvar _c;\n$RefreshReg$(_c, \"Tab\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","DEFAULT_ACTIVE_LINE_MODE","tabBoxStyle","display","cursor","tabStyle","color","width","activeTabStyle","CSSProperties","tabStyleter","Tab","tabs","onTabChange","activeLineMode","_s","containerRef","scrollable","setScrollable","activeKey","setActiveTab","container","current","containerWidth","offsetWidth","totalTabsWidth","reduce","acc","tab","length","activeTabElement","children","containerScrollLeft","scrollLeft","activeTabOffsetLeft","offsetLeft","activeTabWidth","handleTabChange","index","ref","style","overflowX","whiteSpace","position","top","left","zIndex","height","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/summer/Desktop/2/filbet-client-web-ui/src/components/tabs/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\ntype activeLineMode = 'auto' | 'full'\ninterface TabProps {\n  tabs: string[];\n  onTabChange: (index: number) => void;\n  activeTabStyle?: React.CSSProperties;\n  activeLineMode?: activeLineMode;\n}\nconst DEFAULT_ACTIVE_LINE_MODE: activeLineMode = 'auto';\nconst tabBoxStyle: React.CSSProperties = {\n  display: 'flex',\n  cursor: 'pointer',\n};\nconst tabStyle: React.CSSProperties = {\n  color: 'gray', width: '33%'\n};\nconst activeTabStyle = React.CSSProperties = {\n  color: 'gray', width: '33%'\n};\nconst tabStyleter: React.CSSProperties = {\n  color: 'gray', width: '33%'\n};\nconst Tab: React.FC<TabProps> = ({ tabs, onTabChange, activeTabStyle, activeLineMode = DEFAULT_ACTIVE_LINE_MODE, }) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [scrollable, setScrollable] = useState<boolean>(false);\n  const [activeKey, setActiveTab] = useState<number>(0);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      const containerWidth = container.offsetWidth;\n      const totalTabsWidth = tabs.reduce((acc, tab) => acc + (tab.length * 12), 0); // Assuming each character is 12px wide\n      setScrollable(totalTabsWidth > containerWidth);\n    }\n  }, [tabs]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container && scrollable) {\n      const activeTabElement = container.children[activeKey] as HTMLElement;\n      const containerScrollLeft = container.scrollLeft;\n      const activeTabOffsetLeft = activeTabElement.offsetLeft;\n      const activeTabWidth = activeTabElement.offsetWidth;\n\n      // Check if active tab is fully visible\n      if (activeTabOffsetLeft < containerScrollLeft || activeTabOffsetLeft + activeTabWidth > containerScrollLeft + container.offsetWidth) {\n        container.scrollLeft = activeTabOffsetLeft - (container.offsetWidth - activeTabWidth) / 2;\n      }\n    }\n  }, [activeKey, scrollable]);\n\n  const handleTabChange = (index: number) => {\n    onTabChange(index);\n    setActiveTab(index);\n    // Handle tab change logic here\n  };\n\n  return (\n    <div ref={containerRef} style={{ overflowX: 'hidden', whiteSpace: 'nowrap', position: 'relative' }}>\n      {scrollable && (\n        <div style={{ position: 'absolute', top: 0, left: 0, zIndex: 1, width: 50, height: '100%' }}></div>\n      )}\n      <div style={tabBoxStyle}>\n        {tabs.map((tab, index) => (\n          <div\n            key={index}\n            onClick={() => handleTabChange(index)}\n            style={activeKey === index ? { ...tabStyle, ...activeTabStyle } : tabStyle}\n          >\n            {tab}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Tab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}