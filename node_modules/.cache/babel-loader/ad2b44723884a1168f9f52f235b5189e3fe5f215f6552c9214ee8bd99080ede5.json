{"ast":null,"code":"var _jsxFileName = \"/Users/summer/Desktop/2/filbet-client-web-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, createContext, useState, useLayoutEffect } from 'react';\nimport { getLocale, setLocale } from \"./lang/i18n1\";\nimport { I18nContext } from '../lang/i18n';\nimport { useRoutes } from \"react-router-dom\";\nimport routes from './router';\n// 判断当前视口是否为移动端大小\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const checkIsMobile = () => {\n  return window.innerWidth <= 620;\n};\n// 保存是否移动端状态的 context\nexport const IsMobileContext = /*#__PURE__*/createContext(false);\nconst App = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(checkIsMobile);\n  useEffect(() => {\n    const resizeHandler = () => {\n      const currentIsMobile = checkIsMobile();\n      setIsMobile(currentIsMobile);\n    };\n    // 监听 window 的 resize 事件，窗口大小改变时重新计算 isMobile 的值\n    window.addEventListener('resize', resizeHandler);\n    // 组件销毁时取消事件监听\n    return () => window.removeEventListener('resize', resizeHandler);\n  }, []);\n  useLayoutEffect(() => {\n    const bodyClass = isMobile ? 'mobile' : 'pc';\n    const classToRemove = bodyClass === 'mobile' ? 'pc' : 'mobile';\n    document.body.classList.remove(classToRemove);\n    document.body.classList.add(bodyClass);\n  }, [isMobile]);\n  // i18n 语言\n  const value = {\n    locale: getLocale(),\n    setLocale\n  };\n  // const dispatch = useAppDispatch();\n  // useEffect(() => {\n  //     dispatch(setMenus(defaultMenus));\n  // }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(I18nContext.Provider, {\n    value: {\n      locale,\n      translations: translationsMap[locale],\n      setLocale\n    },\n    children: /*#__PURE__*/_jsxDEV(IsMobileContext.Provider, {\n      value: isMobile,\n      children: useRoutes(routes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MdWKsFvH8ufLaIdUBoHk4O7DH5M=\", false, function () {\n  return [useRoutes];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","createContext","useState","useLayoutEffect","getLocale","setLocale","I18nContext","useRoutes","routes","jsxDEV","_jsxDEV","checkIsMobile","window","innerWidth","IsMobileContext","App","_s","isMobile","setIsMobile","resizeHandler","currentIsMobile","addEventListener","removeEventListener","bodyClass","classToRemove","document","body","classList","remove","add","value","locale","Provider","translations","translationsMap","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/summer/Desktop/2/filbet-client-web-ui/src/App.tsx"],"sourcesContent":["import React, { useEffect, createContext, useState, useLayoutEffect } from 'react';\nimport { LocaleContext, getLocale, setLocale } from \"./lang/i18n1\"\nimport { I18nContext, useTranslation } from '../lang/i18n';\nimport { useRoutes } from \"react-router-dom\";\nimport routes from './router'\n// 判断当前视口是否为移动端大小\nexport const checkIsMobile = () => {\n  return window.innerWidth <= 620\n}\n// 保存是否移动端状态的 context\nexport const IsMobileContext = createContext<boolean>(false)\nconst App: React.FC = () => {\n  const [isMobile, setIsMobile] = useState(checkIsMobile)\n  useEffect(() => {\n    const resizeHandler = () => {\n      const currentIsMobile = checkIsMobile()\n      setIsMobile(currentIsMobile)\n    }\n    // 监听 window 的 resize 事件，窗口大小改变时重新计算 isMobile 的值\n    window.addEventListener('resize', resizeHandler)\n    // 组件销毁时取消事件监听\n    return () => window.removeEventListener('resize', resizeHandler)\n  }, [])\n  useLayoutEffect(() => {\n    type BodyClassName = 'pc' | 'mobile'\n    const bodyClass: BodyClassName = isMobile ? 'mobile' : 'pc'\n    const classToRemove: BodyClassName = bodyClass === 'mobile' ? 'pc' : 'mobile'\n    document.body.classList.remove(classToRemove)\n    document.body.classList.add(bodyClass)\n  }, [isMobile])\n  // i18n 语言\n  const value = {\n    locale: getLocale(),\n    setLocale,\n  }\n  // const dispatch = useAppDispatch();\n  // useEffect(() => {\n  //     dispatch(setMenus(defaultMenus));\n  // }, [dispatch]);\n  return (\n    <I18nContext.Provider value={{ locale, translations: translationsMap[locale], setLocale }}>\n      <IsMobileContext.Provider value={isMobile}>\n        {/* <div className=\"main\"> */}\n        {useRoutes(routes)}\n        {/* </div> */}\n      </IsMobileContext.Provider>\n    </I18nContext.Provider>\n\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AAClF,SAAwBC,SAAS,EAAEC,SAAS,QAAQ,cAAc;AAClE,SAASC,WAAW,QAAwB,cAAc;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAC7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOC,MAAM,CAACC,UAAU,IAAI,GAAG;AACjC,CAAC;AACD;AACA,OAAO,MAAMC,eAAe,gBAAGb,aAAa,CAAU,KAAK,CAAC;AAC5D,MAAMc,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACS,aAAa,CAAC;EACvDX,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,eAAe,GAAGT,aAAa,CAAC,CAAC;MACvCO,WAAW,CAACE,eAAe,CAAC;IAC9B,CAAC;IACD;IACAR,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEF,aAAa,CAAC;IAChD;IACA,OAAO,MAAMP,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAEH,aAAa,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EACNhB,eAAe,CAAC,MAAM;IAEpB,MAAMoB,SAAwB,GAAGN,QAAQ,GAAG,QAAQ,GAAG,IAAI;IAC3D,MAAMO,aAA4B,GAAGD,SAAS,KAAK,QAAQ,GAAG,IAAI,GAAG,QAAQ;IAC7EE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACJ,aAAa,CAAC;IAC7CC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAACN,SAAS,CAAC;EACxC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EACd;EACA,MAAMa,KAAK,GAAG;IACZC,MAAM,EAAE3B,SAAS,CAAC,CAAC;IACnBC;EACF,CAAC;EACD;EACA;EACA;EACA;EACA,oBACEK,OAAA,CAACJ,WAAW,CAAC0B,QAAQ;IAACF,KAAK,EAAE;MAAEC,MAAM;MAAEE,YAAY,EAAEC,eAAe,CAACH,MAAM,CAAC;MAAE1B;IAAU,CAAE;IAAA8B,QAAA,eACxFzB,OAAA,CAACI,eAAe,CAACkB,QAAQ;MAACF,KAAK,EAAEb,QAAS;MAAAkB,QAAA,EAEvC5B,SAAS,CAACC,MAAM;IAAC;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAG3B,CAAC;AAACvB,EAAA,CAtCID,GAAa;EAAA,QAgCVR,SAAS;AAAA;AAAAiC,EAAA,GAhCZzB,GAAa;AAwCnB,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}